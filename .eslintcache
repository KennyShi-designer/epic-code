[{"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\index.js":"1","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\History.js":"2","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Register.js":"3","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Login.js":"4","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Loading.js":"5","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Footer.js":"6","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\List.js":"7","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Tips.js":"8","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\index.js":"9","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Header.js":"10","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Home.js":"11","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Uploader.js":"12","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\history.js":"13","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\About.js":"14","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\App.js":"15","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\models\\index.js":"16","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\auth.js":"17","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\image.js":"18","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\user.js":"19"},{"size":337,"mtime":1638797906988,"results":"20","hashOfConfig":"21"},{"size":231,"mtime":1638798297776,"results":"22","hashOfConfig":"21"},{"size":4041,"mtime":1638776417983,"results":"23","hashOfConfig":"21"},{"size":3341,"mtime":1638776410183,"results":"24","hashOfConfig":"21"},{"size":133,"mtime":1604309224000,"results":"25","hashOfConfig":"21"},{"size":343,"mtime":1604307738000,"results":"26","hashOfConfig":"21"},{"size":2067,"mtime":1638798648924,"results":"27","hashOfConfig":"21"},{"size":560,"mtime":1604548657000,"results":"28","hashOfConfig":"21"},{"size":455,"mtime":1604645409000,"results":"29","hashOfConfig":"21"},{"size":2240,"mtime":1638776471331,"results":"30","hashOfConfig":"21"},{"size":507,"mtime":1604653732000,"results":"31","hashOfConfig":"21"},{"size":4466,"mtime":1638798755826,"results":"32","hashOfConfig":"21"},{"size":1129,"mtime":1638798819459,"results":"33","hashOfConfig":"21"},{"size":178,"mtime":1638776385775,"results":"34","hashOfConfig":"21"},{"size":1304,"mtime":1638774403492,"results":"35","hashOfConfig":"21"},{"size":1941,"mtime":1638798755821,"results":"36","hashOfConfig":"21"},{"size":1675,"mtime":1638799456435,"results":"37","hashOfConfig":"21"},{"size":1222,"mtime":1638799414387,"results":"38","hashOfConfig":"21"},{"size":333,"mtime":1638776104761,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1wc5ujv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\index.js",[],["92","93"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\History.js",[],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Register.js",["94"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useStores } from '../stores';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 18,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 18,\r\n    },\r\n};\r\n\r\nconst Component = () => {\r\n    const { AuthStore } = useStores();\r\n    const history = useHistory();\r\n\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.username);\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.register()\r\n            .then(() => {\r\n                console.log('注册成功, 跳转到首页')\r\n                history.push('/')\r\n            }).catch(() => {\r\n            console.log('登录失败，什么都不做')\r\n        });\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const validateUsername = (rule, value) => {\r\n        if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\r\n        if(value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符');\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateConfirm = ({getFieldValue}) => ({\r\n        validator(rule, value) {\r\n            if(getFieldValue('password') === value) return Promise.resolve();\r\n            return Promise.reject('两次密码不一致');\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <Wraper>\r\n            <Title>注册</Title>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '输入用户名',\r\n                        },\r\n                        {\r\n                            validator: validateUsername\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '输入密码',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: '最少4个字符'\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大10个字符'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"确认密码\"\r\n                    name=\"confirmPassword\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '再次确认密码',\r\n                        },\r\n                        validateConfirm\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wraper>\r\n    );\r\n};\r\n\r\nexport default Component;","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Login.js",["95"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useStores } from '../stores';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 18,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 18,\r\n    },\r\n};\r\n\r\nconst Component = () => {\r\n\r\n    const { AuthStore } = useStores();\r\n    const history = useHistory();\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.username);\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.login()\r\n            .then(() => {\r\n                console.log('登录成功,跳转到首页')\r\n                history.push('/');\r\n            }).catch((e)=>{\r\n            console.log(e)\r\n            console.log('登录失败')\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const validateUsername = (rule, value) => {\r\n        if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\r\n        if(value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符');\r\n        return Promise.resolve();\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Wraper>\r\n            <Title>登录</Title>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '输入用户名',\r\n                        },\r\n                        {\r\n                            validator: validateUsername\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '输入密码',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: '最少4个字符'\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大10个字符'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wraper>\r\n    );\r\n};\r\n\r\nexport default Component;","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Loading.js",[],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Footer.js",[],["96","97"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\List.js",["98","99"],"import React, { useEffect } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useStores } from '../stores';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { List, Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\n  width: 100px;\r\n  height: 120px;\r\n  object-fit: contain;\r\n  border: 1px solid #eee;\r\n`;\r\n\r\nconst Component = observer(() => {\r\n    const { HistoryStore } = useStores();\r\n\r\n    const loadMore = () => {\r\n        HistoryStore.find();\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('进入组件')\r\n\r\n        return () => {\r\n            console.log('卸载')\r\n            HistoryStore.reset();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <InfiniteScroll\r\n                initialLoad={true}\r\n                pageStart={0}\r\n                loadMore={loadMore}\r\n                hasMore={!HistoryStore.isLoading&&HistoryStore.hasMore}\r\n                useWindow={true}\r\n            >\r\n                <List\r\n                    dataSource={HistoryStore.list}\r\n                    renderItem={\r\n                        item => <List.Item key={item.id}>\r\n                            <div>\r\n                                <Img src={item.attributes.url.attributes.url}  />\r\n                            </div>\r\n                            <div>\r\n                                <h5>{item.attributes.filename}</h5>\r\n                            </div>\r\n                            <div>\r\n                                <a  target=\"_blank\" href={item.attributes.url.attributes.url}>{item.attributes.url.attributes.url}</a>\r\n                            </div>\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    { HistoryStore.isLoading && HistoryStore.hasMore && (\r\n                        <div>\r\n                            <Spin tip=\"加载中\"/>\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Component;","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Tips.js",[],["100","101"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\index.js",["102"],"import React, { createContext, useContext } from 'react';\r\nimport AuthStore from './auth';\r\nimport UserStore from './user';\r\nimport ImageStore from './image';\r\nimport HistoryStore from './history';\r\n\r\nconst context = createContext({\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n});\r\n\r\nwindow.stores = {\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n};\r\n\r\nexport const useStores = () => useContext(context);\r\n\r\n","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Header.js",["103","104"],"import React, { useState, useEffect } from 'react';\r\nimport LogoUrl from './logo.svg';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { useStores } from '../stores';\r\nimport { observer } from 'mobx-react';\r\n\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 100px;\r\n  background-color: #02101f;\r\n  color: #fff;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 30px;\r\n`;\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: #fff;\r\n  margin-left: 30px;\r\n\r\n  &.active {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`;\r\n\r\nconst Login = styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-left: 10px;\r\n`;\r\n\r\n\r\nconst  Component = observer(() => {\r\n\r\n    const history = useHistory();\r\n    const { UserStore, AuthStore } = useStores();\r\n\r\n    const handleLogout = () => {\r\n        AuthStore.logout();\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        console.log('跳转到登录页面')\r\n        history.push('/login');\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        console.log('跳转到注册页面')\r\n        history.push('/register');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserStore.pullUser();\r\n    },[])\r\n\r\n    return (\r\n        <Header>\r\n            <Logo src={LogoUrl} />\r\n            <nav>\r\n                <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\r\n                <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\r\n                <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\r\n            </nav>\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ? <>\r\n                        {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\r\n                    </> :<>\r\n                        <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                        <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                    </>\r\n\r\n                }\r\n            </Login>\r\n\r\n        </Header>\r\n    );\r\n});\r\n\r\nexport default Component;",["105","106"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\Home.js",["107"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\components\\Uploader.js",["108","109"],"import React, { useRef } from 'react';\r\nimport { useStores } from '../stores';\r\nimport { observer, useLocalStore } from 'mobx-react';\r\nimport { Upload, message, Spin } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n`;\r\nconst H1 = styled.h1`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\nconst Image = styled.img`\r\n  max-width: 300px;\r\n`;\r\n\r\n\r\n\r\nconst Component = observer(() => {\r\n    const { ImageStore, UserStore } = useStores();\r\n    const ref1 = useRef();\r\n    const ref2 = useRef();\r\n\r\n    const store = useLocalStore(() => ({\r\n        width: null,\r\n        setWidth(width) {\r\n            store.width = width;\r\n        },\r\n        get widthStr() {\r\n            return store.width ? `/w/${store.width}` : '';\r\n        },\r\n        height: null,\r\n        setHeight(height) {\r\n            store.height = height;\r\n        },\r\n        get heightStr() {\r\n            return store.height ? `/h/${store.height}` : '';\r\n        },\r\n        get fullStr() {\r\n            //?imageView2/0/w/800/h/400)\r\n            return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n        }\r\n\r\n    }));\r\n\r\n    const bindWidthChange = () => {\r\n        console.log('bindWidthChange...')\r\n        console.log(ref1.current.value)\r\n        store.setWidth(ref1.current.value);\r\n    };\r\n\r\n    const bindHeightChange = () => {\r\n        store.setHeight(ref2.current.value);\r\n    };\r\n\r\n    const props = {\r\n        showUploadList: false,\r\n        beforeUpload: file => {\r\n            ImageStore.setFile(file);\r\n            ImageStore.setFilename(file.name);\r\n            if (UserStore.currentUser === null) {\r\n                message.warning('请先登录再上传！');\r\n                return false;\r\n            }\r\n            window.file = file\r\n            if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\r\n                message.error('只能上传png/svg/jpg/gif格式的图片');\r\n                return false;\r\n            }\r\n            if (file.size > 1024 * 1024) {\r\n                message.error('图片最大1M');\r\n                return false;\r\n            }\r\n\r\n            ImageStore.upload()\r\n                .then((serverFile) => {\r\n                    console.log('上传成功')\r\n                    console.log(serverFile);\r\n                }).catch(() => {\r\n                console.log('上传失败')\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"上传中\" spinning={ImageStore.isUpoading}>\r\n                <Dragger {...props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\r\n                    </p>\r\n                </Dragger>\r\n            </Spin>\r\n            {\r\n                ImageStore.serverFile ? <Result>\r\n                    <H1>上传结果</H1>\r\n                    <dl>\r\n                        <dt>线上地址</dt>\r\n                        <dd><a target=\"_blank\" href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a></dd>\r\n                        <dt>文件名</dt>\r\n                        <dd>{ImageStore.filename}</dd>\r\n                        <dt>图片预览</dt>\r\n                        <dd>\r\n                            <Image src={ImageStore.serverFile.attributes.url.attributes.url} />\r\n                        </dd>\r\n                        <dt>更多尺寸</dt>\r\n                        <dd>\r\n                            <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度（可选）\" />\r\n                            <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度（可选）\" />\r\n                        </dd>\r\n                        <dd>\r\n                            <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\r\n                        </dd>\r\n                    </dl>\r\n                </Result> : null\r\n            }\r\n        </div>\r\n    );\r\n});\r\nexport default Component;",["110","111"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\history.js",[],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\pages\\About.js",[],["112","113"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\App.js",[],["114","115"],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\models\\index.js",["116","117"],"import Avatar from 'antd/lib/avatar/avatar';\r\nimport AV, { Query, User } from 'leancloud-storage';\r\n\r\n\r\nAV.init({\r\n    appId: \"ydu3crxukCpGF09N5iY7iPJW-gzGzoHsz\",\r\n    appKey: \"5xvY91aepVHJAQ9uFmpViHRU\",\r\n    serverURL: \"https://ydu3crxu.lc-cn-n1-shared.com\"\r\n});\r\n\r\nconst Auth = {\r\n    register(username, password) {\r\n        let user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\r\n        });\r\n    },\r\n\r\n    login(username, password) {\r\n        console.log('------')\r\n        console.log(username, password)\r\n        return new Promise((resolve, reject) => {\r\n            User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\r\n        });\r\n    },\r\n\r\n    logout() {\r\n        User.logOut();\r\n    },\r\n\r\n    getCurrentUser() {\r\n        return User.current();\r\n    }\r\n\r\n};\r\n\r\nconst Uploader = {\r\n    add(file, filename) {\r\n        const item = new AV.Object('Image');\r\n        const avFile = new AV.File(filename, file);\r\n        item.set('filename', filename);\r\n        item.set('owner', AV.User.current());\r\n        item.set('url', avFile);\r\n        return new Promise((resolve, reject) => {\r\n            item.save().then(serverFile => resolve(serverFile), error => reject(error));\r\n        });\r\n    },\r\n\r\n    find({page=0, limit=10}) {\r\n        const query = new AV.Query('Image');\r\n        query.include('owner');\r\n        query.limit(limit);\r\n        query.skip(page*limit);\r\n        query.descending('createdAt');\r\n        query.equalTo('owner', AV.User.current());\r\n        return new Promise((resolve, reject) => {\r\n            query.find()\r\n                .then(results => resolve(results))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    Auth,\r\n    Uploader\r\n};","C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\auth.js",[],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\image.js",[],"C:\\Users\\K\\Desktop\\应用\\A4应用\\4 面试项目\\1-图床\\tuziji\\tuziji\\src\\stores\\user.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":39},{"ruleId":"122","severity":1,"message":"123","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":39},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":29,"column":8,"nodeType":"130","endLine":29,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":51,"column":37,"nodeType":"134","endLine":51,"endColumn":52},{"ruleId":"118","replacedBy":"135"},{"ruleId":"120","replacedBy":"136"},{"ruleId":"122","severity":1,"message":"137","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"138","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"139","line":61,"column":7,"nodeType":"130","endLine":61,"endColumn":9,"suggestions":"140"},{"ruleId":"118","replacedBy":"141"},{"ruleId":"120","replacedBy":"142"},{"ruleId":"122","severity":1,"message":"143","line":9,"column":11,"nodeType":"124","messageId":"125","endLine":9,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":111,"column":32,"nodeType":"134","endLine":111,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":124,"column":32,"nodeType":"134","endLine":124,"endColumn":47},{"ruleId":"118","replacedBy":"144"},{"ruleId":"120","replacedBy":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"120","replacedBy":"147"},{"ruleId":"118","replacedBy":"148"},{"ruleId":"120","replacedBy":"149"},{"ruleId":"122","severity":1,"message":"150","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":14},{"ruleId":"122","severity":1,"message":"151","line":2,"column":14,"nodeType":"124","messageId":"125","endLine":2,"endColumn":19},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar",["152"],["153"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'HistoryStore'. Either include it or remove the dependency array.","ArrayExpression",["154"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["152"],["153"],"'React' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'UserStore'. Either include it or remove the dependency array.",["155"],["152"],["153"],"'user' is assigned a value but never used.",["152"],["153"],["152"],["153"],["152"],["153"],"'Avatar' is defined but never used.","'Query' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [HistoryStore]",{"range":"160","text":"161"},"Update the dependencies array to be: [UserStore]",{"range":"162","text":"163"},[687,689],"[HistoryStore]",[1240,1242],"[UserStore]"]